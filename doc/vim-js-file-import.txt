*vim-js-file-import.txt*    Import js files and dependencies using ctags

        Import js files and dependencies using ctags

Author: Kristijan <husakkristijan at gmail.com>
License: MIT

vim-js-file-import			    *vim-js-file-import*

1. Introduction				    |vim-js-file-import-introduction|
2. Install				    |vim-js-file-import-install|
3. Commands				    |vim-js-file-import-commands|
4. Mappings				    |vim-js-file-import-mappings|
5. Functions				    |vim-js-file-import-functions|
6. Settings				    |vim-js-file-import-settings|

==============================================================================
1. Introduction					*vim-js-file-import-introduction*

Vim js file import is plugin for importing js project files and dependencies
using Universal ctags.

Main features:

1. Import project files using "import from 'path'" or "require('path')" syntax
2. Import package.json dependencies
3. Import partial dependencies (import { Dependency } from 'path')
4. Sort dependencies automatically and manually
5. Manually import by typing in file path or package name
6. Smarter go to definition


==============================================================================
2. Install					*vim-js-file-import-install*

Requirements:

- Universal ctags
- `has("python3")` or `has("python3")`

Install with `Plug`
`Plug 'kristijanhusak/vim-js-file-import'`

Add mapping:
`nnoremap <F5> JsFileImport`

==============================================================================
3. Commands					*vim-js-file-import-commands*

					      *JsFileImport*
JsFileImport
		Used for importing package/filepath under cursor.
		If there is only one tag found, it imports it by default.
		If you want to see the list of available imports even if there
		is only one entry, use *|JsFileImportList|*

		`:JsFileImport`

					      *JsFileImportList*
JsFileImportList
		Same as *|JsFileImport|* but always shows the list.
		similar to *|g]|* when selecting a tag

		`:JsFileImportList`

					      *PromptJsFileImport*
PromptJsFileImport
		Used for importing package/filepath by prompting a user to
		enter path to file or package name.
		Path needs to be selected from the current
		(n)vim working directory. Plugin takes care of determining
		if it's full or partial import.

		`:PromptJsFileImport`

					      *JsGotoDefinition*
JsGotoDefinition
		Go to definition under cursor. It works much smarter than
		default tag jump. If any of the tags in list has the same
		filename as current buffer, jumps to that definition.
		If you want to select another definition, use
		*|JsGotoDefinitionList|*

		`:JsGotoDefinition`

					      *JsGotoDefinitionList*
JsGotoDefinitionList
		Same as *|JsGotoDefinition|* but always shows the list.
		Similar to *|]g* for selecting a tag

		`:JsGotoDefinitionList`

					      *SortJsFileImport*
SortJsFileImport
		Used for sorting imports alphabetically. If you want to sort
		imports after each new import, check
		|g:js_file_import_sort_after_insert|

		`:SortJsFileImport`

					      *RemoveUnusedJsFileImports*
RemoveUnusedJsFileImports
		Removes unused imports. Still experimental.

		`:RemoveUnusedJsFileImports`

==============================================================================
4. Mappings					*vim-js-file-import-mappings*

					      *<Leader>if*
<leader>if
		Executes *|JsFileImport|* command.
		To remove this mapping, check
		*|g:js_file_import_no_mappings|*.

					      *<Leader>iF*
<leader>iF
		Executes *|JsFileImportList|* command.
		To remove this mapping, check
		*|g:js_file_import_no_mappings|*.

					      *<Leader>ip*
<leader>ip
		Executes *|PromptJsFileImport|* command.
		To remove this mapping, check
		*|g:js_file_import_no_mappings|*.

					      *<Leader>ig*
<leader>ig
		Executes *|JsGotoDefinition|* command.
		To remove this mapping, check
		*|g:js_file_import_no_mappings|*.

					      *<Leader>iG*
<leader>iG
		Executes *|JsGotoDefinitionList|* command.
		To remove this mapping, check
		*|g:js_file_import_no_mappings|*.

					      *<Leader>is*
<leader>is
		Executes *|SortJsFileImport|* command.
		To remove this mapping, check
		*|g:js_file_import_no_mappings|*.

					      *<Leader>ic*
<leader>ic
		Executes *|RemoveUnusedJsFileImports|* command.
		To remove this mapping, check
		*|g:js_file_import_no_mappings|*.

==============================================================================
3. Functions					*vim-js-file-import-functions*

					      *jsfileimport#word()*
jsfileimport#word(showList)
		Used for importing package/filepath under cursor.
		if `showList` is true, forces showing the list even if there
		is only one entry.

		`:call jsfileimport#word()`

					      *jsfileimport#prompt()*
jsfileimport#prompt()
		Used for importing package/filepath by prompting a user to
		enter path to file or package name.
		Path needs to be selected from the current
		(n)vim working directory. Plugin takes care of determining
		if it's full or partial import.

		`:call jsfileimport#prompt()`

					      *jsfileimport#goto()*
jsfileimport#goto(showList)
		Go to definition under cursor. It works much smarter than
		default tag jump.
		if `showList` is true, forces showing the list even if there
		is only one entry.

		`:call jsfileimport#goto()`

					      *jsfileimport#sort()*
jsfileimport#sort()
		Used for sorting imports alphabetically. If you want to sort
		imports after each new import, check
		|g:js_file_import_sort_after_insert|

		`:call jsfileimport#sort()`

					      *jsfileimport#clean()*
jsfileimport#clean()
		Removes unused imports. Still experimental.
		`:call jsfileimport#clean()`

==============================================================================
4. Settings					*vim-js-file-import-settings*

					      *g:js_file_import_force_require*
g:js_file_import_force_require
		By default `import [name] from [file]` is used to add new
		imports, in case when there are no any other existing imports.
		If file contains at least one `require([file])`,
		it will use the `require()` to import files.
		Set this to `1` to force using `require()`.

		Default value: 0

					      *g:js_file_import_sort_after_insert*
g:js_file_import_sort_after_insert
		If you want all imports to be sorted after each new import,
		set this value to `1`. If you want to do it manually,
		check |SortJsFileImport|.

		Default value: 0

					      *g:js_file_import_package_first*
g:js_file_import_package_first
		Absolute imports (packages) are always imported first,
		which is recommended by most style guides.
		Set this to 0 to disable appending them first, and import them
		last, same as files.

		Default value: 1

					      *g:js_file_import_filters*
g:js_file_import_filters
		By default taglist is filtered so the obsolete values get
		removed. Obsolete values are tags that has a `require(` or
		`import from`. These are tags generated by universal ctags,
		which causes offering or importing/jumping to wrong
		definition. If universal ctags generates more tags that are
		obsolete for your use case, just append them to this variable
		and it will be filtered out.

		Example:
		`let g:js_file_import_filters = ['container(']`

		Remove all tags that has a call to `container()` function.

		Default value: []
					      *g:js_file_import_prompt_if_no_tag*
g:js_file_import_prompt_if_no_tag
		In case tag is not found for the given word,
		you are prompted to enter the file path or package name
		manually. Path needs to be selected from the current
		(n)vim working directory. Plugin takes care of determining
		if it's full or partial import. To disable this prompt, set
		this value to `0`. To manually use prompt check
		|PromptJsFileImport|

		Default value: 1

					      *g:js_file_import_no_mappings*
g:js_file_import_no_mappings
		Disable mappings.

		Default value: 0

					      *g:js_file_import_sort_command*
g:js_file_import_sort_command
		Command used for sorting imports.

		Default value: `'{,'}-1sort i`

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
